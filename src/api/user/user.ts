/**
 * Generated by orval v6.15.0 üç∫
 * Do not edit manually.
 * Rust API
 * This is the template for the Rust API
 * OpenAPI spec version: 0.1.0
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";
import type { User, PublicUser, UserUpdate } from "../../model";

/**
 * Get current user

Get current user based on the token
 * @summary Get current user
 */
export const getuser = <TData = AxiosResponse<User>>(
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/user`, options);
};
/**
 * Update current user

Update current user based on the token
 * @summary Update current user
 */
export const updateuser = <TData = AxiosResponse<PublicUser>>(
  userUpdate: UserUpdate,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.put(`/api/user`, userUpdate, options);
};
/**
 * Delete current user

Delete current user based on the token
 * @summary Delete current user
 */
export const deleteuser = <TData = AxiosResponse<void>>(
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.delete(`/api/user`, options);
};
/**
 * Get one by uid user

Get one user by id
 * @summary Get one by uid user
 */
export const getoneuser = <TData = AxiosResponse<PublicUser>>(
  id: string,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/user/${id}`, options);
};
